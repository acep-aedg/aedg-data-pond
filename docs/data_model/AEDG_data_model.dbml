// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs


// Geography

Table communities {
  id integer [primary key]
  fips_code varchar [note: "Federal Information Processing Series (FIPS)"]
  name varchar
  regional_corporation_fips_code integer
  borough_fips_code integer
  grid_id integer
  ansi_code varchar [note: "American National Standards Institute (ANSI)"]
  dcra_code varchar [note: "Alaska Division of Community and Regional Affairs (DCRA)"]
  latitude double
  longitude double
  pce_eligible bool
  pce_active bool
  geometry geometry
  village_corp_id integer [note: "nope?"]
}

Table boroughs {
  // borough or census areas (which are statistical divisions of the unorganized borough)
  id integer [primary key]
  name varchar [note: 'either borough or census area']
  fips_code varchar
  is_census_area bool [note: 'if false then is a borough.']
  geometry Polygon
}
Ref: communities.borough_fips_code - boroughs.fips_code 

Table village_corporations {
  id integer [primary key]
  community_fips_code varchar
  label varchar
  geometry Point
}
Ref: communities.fips_code - village_corporations.community_fips_code

Table regional_corporations {
  id integer [primary key]
  name varchar
  fips_code varchar
  arealand integer 
  areawater integer
  geometry Polygon
}
Ref: communities.regional_corporation_fips_code - regional_corporations.fips_code 

Table house_districts {
  id integer [primary key]
  house_district integer
  geometry Polygon
  as_of_date date [note: 'when redistricted']
}

Table senate_districts {
  id integer [primary key]
  senate_district character
  geometry Polygon
  as_of_date date [note: 'when redistricted']
}

Table legislative_community {
  id integer [primary key]
  community_fips_code varchar
  house_district integer
  senate_district char
  election_region integer
}
Ref: legislative_community.community_fips_code - communities.fips_code
Ref: legislative_community.house_district - house_districts.house_district 
Ref: legislative_community.senate_district - senate_districts.senate_district 


// Energy

Table electric_operators {
  // From Neil
  id integer [primary key]
  aea_operator_id	varchar [note: 'AEA-001']
  pce_utility_code	varchar [note: 'AKHI']
  eia_operator_id	integer [note: '24486']
  rca_cpcn integer [note: '499']
  operator_name	varchar [note: 'Akhiok, City']
  sector_id integer
  sector_name	varchar [note: '"Electric Utility" vs "Commercial NAICS Non-Cogen" etc']
  sector_number	integer
  operator_rca_regulatory_status_name	varchar [note: 'Unregulated']
  operator_utility_certificate bool
  operator_utility_type_name varchar [note: 'Electric Co-op']	
  operator_cpcn_status varchar [note: 'Active']
  pce_eligible bool
  power_generation_end_use varchar [note: 'Retail or Wholesale']
  notes	varchar
}

Table electric_service_areas{
  // service areas are defined by KML files posted on RCA website
  id integer [primary key]
  rca_cpcn integer
  geometry MultiPolygon [note: 'Dream for future. RCA knows but not published in spatial format?']
}
Ref: electric_service_areas.rca_cpcn > electric_operators.rca_cpcn 

Table grids {
//  railbelt = many utilities on one grid
//  AVEC = 1 utility with many (micro) grids
  id integer [primary key]
  name varchar
  //microgrid bool []
  //capacity integer [note: "megawatts MW"]
  //operator_id integer
  //geometry MultiLine
}
Ref: plants.grid_id - grids.id
//Ref: grids.operator_id - electric_utilities.id
Ref: communities.grid_id > grids.id


Table interties {
  id integer [primary key]
  grid_id integer [note: "grids might have many interies"]
  intertie_name varchar
  intertie_id varchar
  intertie_month integer
  intertie_year varchar
  data_source varchar
  community_name varchar
  operator_name varchar [note: "operator_id in original"]
  gnis integer
  latitude double
  longitude double
  aea_energy_region_id integer
  calendar datetime
}
//Ref: intertie.operator_name - electric_utility.utility_name_pce
Ref: interties.grid_id > grids.id
Ref: interties.operator_name - communities_pce.pce_operator_name


// Energy tables associated with reports

Table utility_regulatory_statuses {
  id integer [primary key]
  regulatory_status varchar [note: "Not regulated, Regulated, Regulated rate exemption"]
}

Table operator_type_name {
  id integer [primary key]
  operator_type varchar [note: "Private Electric Utility, Private Electric Utility, Electric Co-op"]

}

Ref: electric_operators.operator_rca_regulatory_status_name - utility_regulatory_statuses.id
Ref: electric_operators.operator_utility_type_name - operator_type_name.id

Table plants {
  id integer [primary key]
  name varchar
  intertied bool
  akeps_region_id integer
  plant_id_eia integer
  plant_name_eia varchar
  grid_id integer [note: "one grid many plants"]
  eia_operator_id integer
  mover_id integer [note: "plant has one type of engine"]
  plant_fuel_id integer [note: "plant could use different fuels"]
  geometry Point 
}
Ref: plants.eia_operator_id > electric_operators.eia_operator_id

// Disabled because communities/utilties have PCE status
//Table plant_pce_status { 
//  id integer [primary key]
//  name varchar
//}
//Ref: plant.plant_pce_status_id - plant_pce_status.id

Table fuel_types {
  // Type of fuel used to generate electricity. 
  // DFO=Distillate Fuel Oil, RFO=Residual Fuel Oil, JF=Jet Fuel, 
  // NA=Naphtha, NG=Natural Gas, SUB=Sub-bituminous Coal, WC=Waste Coal, 
  // HAGO=Heavy Atmospheric Gas Oil.
  id integer [primary key]
  name varchar
  abbreviation varchar
  physical_units varchar [note: "Gallon"]
  conversion_factor_mmbtu double
  emmission_factor double
}

Table plant_fuels {
  // Plants could have multiple fuels
  id integer [primary key]
  plant_id integer
  fuel_id integer
}
Ref: plants.id - plant_fuels.plant_id
Ref: fuel_types.id - plant_fuels.fuel_id

Table prime_movers {
  // Type of prime mover (engine) used to generate 
  // electricity. CA=Combined Cycle, steam part; 
  // CT=Combined Cycle, turbine part; GT=Gas Turbine; 
  // IC=Internal Combustion Engine; ST= Steam Turbine; 
  // OT=Other.
  id integer [primary key]
  abbreviation varchar
  description varchar
}

Table plant_movers {
  // plants can have multiple boilers or whatever
  id integer [primary key]
  plant_id integer
  mover_id integer
}
Ref: plants.id - plant_movers.plant_id
Ref: prime_movers.id - plant_movers.mover_id


Table communities_pce {
  // separate rows for each report with multiple
  // communities filing together
  // some from Jesse's identities table
  id integer [primary key]
  community_fips_code varchar
  pce_community_code integer [note: "AKA PJ Code, Acct, PCE ID, etc"]
  pce_community_name varchar [note: "can contain multiple community names"]
  pce_operator_name varchar [note: "utility but maybe different string"]
  aea_operator_id integer
  interconnected bool
}
Ref: communities_pce.community_fips_code > communities.fips_code
Ref: communities_pce.aea_operator_id - electric_operators.aea_operator_id



